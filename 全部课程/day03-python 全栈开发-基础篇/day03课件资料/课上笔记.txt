Python介绍
发展史
	被解救的姜戈
	2.4  50万行
	Python 2.6 - October 1, 2008 
	Python 2.6.1 - October 1, 2008 
	Python 2.6.6 - October 1, 2008 
	Python 3.0 - December 3, 2008 
	Python 2.7 - July 3, 2010  #目前业内主流使用的工业版本依然是2.7
	
	print "hello world" #in 2.x
	print("hello world") #in 3.x
	
	
	
	系统变量
	


	D:\>"d:\Program Files\Python35\python.exe" c:\hello.txt
	Hello World!
		
	
	#c:\hello.txt   .txt 代表文件的扩展名（后缀名），用于区分文件类型
	.txt 记事本文本文件
	.doc word文件
	.xls excel文件
	.ppt PPT文件
	.exe 可执行文件
	.jpg .png  .jpeg  图片
	.gif 动态图片
	.pdf 	PDF文件
	.mp4 .avi 视频
	.py   python文件
	.java java 文件
	.c .h  c源码
	.php php文件
	.js   javascript 

	环境变量 
	
	D:\Program Files\Python35\Scripts\;
	D:\ProgramFiles\Python35\;
	%SystemRoot%\system32;%SystemRoot%;%SystemRoot%\System32\Wbem;%SYSTEMROOT%\System32\WindowsPowerShell\v1.0\;
	D:\Program Files\Python27
	
	
	执行py程序方式为:
		1. 交互器，缺点程序不能永久保存，主要用与简单的语法测试相关
		2. 文件执行
		
	
Hello World程序
变量
	变量 是 为了存储 程序运算过程中的一些中间 结果，为了方便日后调用
	
	Variables变量 are used to store保存、储存 information信息 to be referenced被日后调用 and manipulated操作或更改 in a computer program程序. They also并且还 provide提供 a way方式 of labeling标记 data数据 with a descriptive描述性 name, so our programs can be understood理解 more clearly更清晰 by the reader阅读者 and ourselves我们自己. It is helpful to think of variables as containers容器 that hold保持、保存 information(如果我们把变量看作成是一个保存信息的容器是更容易理解的). Their sole主要 purpose目的 is to label标记 and store存储 data in memory内存里. This data数据 can then然后 be used使用它 throughout整个 your program.

	变量的命名规则
	1. 要具有描述性
	2. 变量名只能_,数字，字母组成，不可以是空格或特殊字符(#?<.，￥$*!~)
	3. 不能以中文为变量名
	4. 不能以数字开头
	5. 保留字符是不能被使用
	
	
	
	常量 ：不变的量 pie = 3.141592653.... 
	在py里面所有的变量都是可变的 ,所以用全部大写的变量名来代表次变量为常量
	
	
	内存何时释放？
	
	
	字符编码
	支持中文的第一张表就叫 GB2312 
	
	1980 gb2312 6700+
	1995 gbk1.0 20000
	2000 gb18030 27000 
	big5 台湾
	
	unicode 万国码  支持所有国家和地区的编码 
	2**16 = 65535 = 存一个字符 统一占用2个字节
	
	
	UTF-8 = unicode 的扩展集，可变长的字符编码集
	
	Assic -->Gb2312 ->gbk1.0-->gb18030 
	Assic -->unicode -->utf-8   /utf-16 
	
	
	Python2.x == Assic 默认编码
		#!-*- coding:utf-8 -*- 
		#coding:utf-8 
		
	python3.x == unicode默认编码 
	
	
	unicode 是向下兼容gb2312 , gbk 

	
注释
	单行注释 用#
	多行注释用三个单引号或三个双引号 '''被注释的内容'''
	
	
	
	
	
	
	
	
	
	
	
	
用户输入

	

模块初识
.pyc是个什么鬼？
数据类型初识
数据运算
表达式if ...else语句
	缩进 IndentationError: expected an indented block
	                            ^
	IndentationError: unindent does not match any outer indentation level
	SyntaxError: invalid syntax 语法错误
	tab != 4个空格
	
	缩进级别必须保持一致 
		
表达式for 循环
break and continue 
表达式while 循环
作业需求